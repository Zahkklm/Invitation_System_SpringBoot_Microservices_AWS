version: '3.8'

services:
  # Test database for User Service
  postgres-user-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: user_service_test_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
    ports:
      - "5434:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d user_service_test_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Test database for Organization Service
  postgres-org-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: organization_service_test_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
    ports:
      - "5435:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d organization_service_test_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Test database for Invitation Service
  postgres-invitation-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: invitation_service_test_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
    ports:
      - "5436:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d invitation_service_test_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Kafka for test events
  zookeeper-test:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"
    networks:
      - test-network

  kafka-test:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper-test
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-test:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-test:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5

  # User Service Tests
  user-service-test:
    build:
      context: .
      dockerfile: user-service/Dockerfile.test
    depends_on:
      postgres-user-test:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user-test:5432/user_service_test_db
      SPRING_DATASOURCE_USERNAME: test_user
      SPRING_DATASOURCE_PASSWORD: test_pass
    networks:
      - test-network
    command: ./gradlew :user-service:test --no-daemon

  # Organization Service Tests
  organization-service-test:
    build:
      context: .
      dockerfile: organization-service/Dockerfile.test
    depends_on:
      postgres-org-test:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-org-test:5432/organization_service_test_db
      SPRING_DATASOURCE_USERNAME: test_user
      SPRING_DATASOURCE_PASSWORD: test_pass
    networks:
      - test-network
    command: ./gradlew :organization-service:test --no-daemon

  # Invitation Service Tests
  invitation-service-test:
    build:
      context: .
      dockerfile: invitation-service/Dockerfile.test
    depends_on:
      postgres-invitation-test:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-invitation-test:5432/invitation_service_test_db
      SPRING_DATASOURCE_USERNAME: test_user
      SPRING_DATASOURCE_PASSWORD: test_pass
    networks:
      - test-network
    command: ./gradlew :invitation-service:test --no-daemon

networks:
  test-network:
    driver: bridge
